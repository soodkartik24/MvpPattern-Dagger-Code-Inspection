apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.github.spotbugs'

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    flavorDimensions "default"

    def versionPropsFile = file('version.properties')
    def code = 1
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        code = versionProps['VERSION_CODE'].toInteger()
        def runTasks = versionProps['UPDATE_VERSION_CODE'].toBoolean()
        if (runTasks) {
            code += 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    defaultConfig {
        applicationId "com.soodkartik.mvppattern"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode code
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    productFlavors {
        live {
            applicationId "com.soodkartik.mvppattern"
            dimension "default"
        }
        dev {
            applicationId "com.soodkartik.mvppattern"
            dimension "default"
        }
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}_${variant.versionCode}_${variant.versionName}.apk"
                }
            }
        }
        debug {
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}_${variant.versionCode}_${variant.versionName}.apk"
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    checkstyle {
        toolVersion "8.18"
    }
    spotbugs {
        toolVersion = '3.1.10'
    }

    lintOptions {
        checkReleaseBuilds true
        checkDependencies true
        // Turns off checks for the issue IDs you specify.
        enable 'TypographyFractions', 'TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // if true, only report errors.
        ignoreWarnings false
        checkAllWarnings true
        abortOnError true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.core:core-ktx:$core_kotlin_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitGsonversion"
    implementation "com.google.android.material:material:$google_material_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation "com.google.firebase:firebase-analytics:$firebase_analytics_version"
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "io.michaelrocks:libphonenumber-android:$lib_phone_number"
    implementation "org.greenrobot:eventbus:$event_bus_version"
    implementation "id.zelory:compressor:$zelory_compressor_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_compiler_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_compiler_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Android runner and rules support
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    // Espresso support for instrumentation testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //mockito support for unit testing
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "junit:junit:$junit_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.android.databinding:compiler:$gradle_version"
}
